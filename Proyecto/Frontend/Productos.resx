<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="agregarBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gsTBQwjqj0l3AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANcSURBVFhH
        7ZZZqE1hFMcvyphQ5EWGkulJFIpEMkXiwexBGS4PwoNQSvKAMpShUOTJ+CBCPAhRIsqUocwykznxgN/v
        nLNO23auu++tEw/3X7/O3md/3/rWXmt969sVdfofdAWawzHoCltgOJRT3WEdjPTmJ7SEh9ATjsMkKJca
        wnXwRV/5R00daAA9YBqsLzAFukA9qE4r4RS0AtfO7IBp2g5f4DkcgRUFvPa/97AJmkFVegR9wTWLDmyA
        D7AT7kPagYHwAPZDB/9IqCPMK/z6zDF3YQCk1Qa+QyP4w4HVBdIOLIXXUCoqLvoOdsFbmAHKsc5xblKD
        4Wb+8ncHvAklU+Cba6g9dIZKmAOjoD745i6uesEbmJ27y89xbjISI8Bdp4oOvIB+XiCNGoFBYM4Nu84s
        AI3tLXAbrAcj8BmsH/kIP0AnlXNNR9RESQcM+zWYBbvhFjQGFzCfLm6BdYOQuTTkbcGwf4PpYBEPBbeX
        9pQ2LExV0gG31ScwN19hTOE/q300GCEX7w1bwRA3gTWg403BxVzUxXVCZ3RK5yxMd4dbtKQDygGG04cO
        cp/71u7ZteCeNb+L4TQsBw0ehZmgDLvhNw2REtOjXW3ZJzI7YJNxb8fOMBJnQVmA5/KXxecho6OjFqSy
        QC1UbdmsMjtgd7PBLIPN4L59BnvgHswF5eKr8pc5BxeCYbc+XNwtql1tabM/PIUWkMmBTuAzDycnGOY+
        YI2MBfNuRDTootbSItBWNCcVDjjvBLhwkFNVKVCeWLZPJyuL7iRcgIkwFZ5AnKYWrQ0nKW1pU1mkj8Hi
        rNKBKMKQhbcNJsMZOASear6544ZB6DyMy18W5RhtKh2wQP+agtiG0fc9v3eAb2lfcPEJcAcOgrLwjMxL
        sImFtKGtiGAmB1Q0olKKnI+HOIKNjEVpE0tKG9oKZXYg2YpD9gNPTBuQXVMZ2n1gXuMtQ87VRjIimR1Q
        ycNIaegS3ADToK5CNKuk4jDSRlI1ckClj2MnXgTr4QD4eZWWY52TPo5VjR1Q6Q8Sa8B2vATaQchnjnFs
        +s1DtXJAGf7qPsl85phkztOqtQMhCy39Ueq1/6WLsJRKOnAZNoLfhZ5a5VRrcB0L13MlJw+JwzA/d1d+
        +b1g2obk7ur071RR8Qu4Rxk4yjLr9wAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="pRODUCTOBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>